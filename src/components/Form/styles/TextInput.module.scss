@import "./vars";

.TextInput {
	--background-color: #f7f7f7;

	

	&:not(:first-child) {
		margin-top: 24px;
	}

	.Field {
		position: relative;
		width: 100%;
		min-height: $input-height;
		background-color: var(--background-color);
		border-radius: $field-radius $field-radius 0 0;
	
		display: flex;
		align-items: center;
		box-shadow: inset 0 -1px 0 0 $indicator-color;

		.Indicator {
			position: absolute;
			bottom: 0;
			left: 50%;
			width: 0;
			height: 2px;
			background-color: $indicator-color;
			transition: $transition;
			transition-property: background-color, width, height, left;
		}
	}

	.Input {
		flex-grow: 1;
		overflow: hidden;

		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: flex-start;

		width: calc(100% - ($input-padding * 2));
		min-height: calc($input-height - $input-padding);
		margin: ($input-padding * 0.5) $input-padding ($input-padding * 0.5);
		padding-top: ($input-padding);

		label {
			--color: $label-color;

			position: absolute;
			top: 0;
			left: 0;
			height: calc($input-height - $input-padding);
			display: flex;
			align-items: center;
			color: $label-color;
			font-size: $label-size;
			user-select: none;
			transition: $transition;
			transition-property: color, font-size, height;
		}

		input, textarea {
			position: relative;
			top: 0;
			width: 100%;
			background-color: transparent;

			&:focus {
				outline: none;
			}
		}

		textarea {
			resize: none;
		}
	}

	.SupportingText {
		margin-top: 4px;
		padding: 0 $input-padding;
		font-size: 12px;
		color: $support-color;
	}

	// Filled & focused state
	&.filled, &.focused {
		.Input {
			label {
				font-weight: 600;
				font-size: 12px;
				height: $label-size;
			}
		}
	}

	// Focused state
	&.focused {
		.Input {
			label {
				color: $label-focused-color;
			}
		}
		.Indicator {
			width: 100%;
			height: 2px;
			left: 0;
			background-color: $indicator-focused-color;
		}
	}

}